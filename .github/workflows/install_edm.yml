# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pychron Install via EDM with pytest suite

on:
  push:
    branches: [ dev/dr ]
  pull_request:
    branches: [ dev/dr ]

jobs:
  flake8_py3:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Set up Python environment
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Run flake8
        uses: py-actions/flake8@v1
        with:
          ignore: "F401"
          exclude: "docs,sandbox,tests,alembic_dvc,zobs"
          max-line-length: "100"
  build:
    name:  Pychron Install via EDM (${{ matrix.python-version }}, ${{ matrix.os }})
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Cache EDM packages
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: ${{ runner.os }}--${{ hashFiles('requirements.txt') }}
      - name: Setup EDM
        uses: enthought/setup-edm-action@v1
        with:
          edm-version: 3.1.1
      - name: Install EDM dependencies
        run: >
          edm install -y chaco certifi cython envisage future gitpython keyring jinja2 lxml numpy pandas patsy pillow
          pip pyface pyparsing pyproj pymysql pyqt5 pytables pyyaml pygments qt Reportlab requests
          scipy sqlalchemy traits xlrd xlsxwriter xlwt flake8 pytest
      - name: Install PIP dependencies
        run: >
          ~/.edm/envs/edm/bin/python -m pip install --no-dependencies uncertainties statsmodels qimage2ndarray peakutils
      - name: Test with pytest
        run: |
          ~/.edm/envs/edm/bin/python -m unittest pychron/test_suite.py


